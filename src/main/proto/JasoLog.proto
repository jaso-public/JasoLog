
syntax = "proto3";

option java_multiple_files = true;
option java_package = "jaso.log.protocol";
option java_outer_classname = "JasoLogProto";
option objc_class_prefix = "JL";

package JasoLog;

/*
    Log Registry Service
    Maps a names log to discovery service.
    The registry could be a public service that simply
    maps a name to a list of endpoints of a log discovery 
    service.  For now we will just hard code the location 
    of the log discovery service
*/

/*
    Log Discovery Service
    This service is used to find log servers hosting
    partitions of the log. When a server first attaches
    to a log it can ask for the log server hosting the 
    partition for the empty string.  This can be the starting 
    point for learning about the structure of the log.  
*/
service LogDiscoveryService {
    rpc FindServer(FindServerRequest) returns (FindServerResponse) {}
}


message FindServerRequest {
  string name = 1;
}

message FindServerResponse {
  string message = 1;
}



/*
    LogService
    The Log Service is the API provided to log clients which
    allows the client to make log requests and to receive a
    stream of log events from the log servers.
*/
service LogService {
    rpc Send(stream Request) returns (stream Event) {}
}


message Request {
    oneof request_type {
        LogRequest log_request = 1;
        SplitRequest split_request = 2;
    }
}

message LogRequest {
    string key = 1;
    string value = 2;
}   

message SplitRequest {
    string key = 1;
    string split = 2;
}


message Event {
    oneof event_type {
        LogEvent log_event = 1;
        SplitEvent split_event = 2;
    }
}

message LogEvent {
    string key = 1;
    string value = 2;
}

message SplitEvent {
    string key = 1;
    string split = 2;
}

